name: Security & Dependency Monitoring

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  dependency-check:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run dependency audit
        run: bun audit --audit-level high
        continue-on-error: true

      - name: Check for outdated packages
        run: bun outdated
        continue-on-error: true

  secrets-scan:
    name: Scan for Secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Install license checker
        run: bun add --dev license-checker

      - name: Check licenses
        run: bunx license-checker --summary
        continue-on-error: true

  security-headers:
    name: Security Headers Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check Next.js security headers
        run: |
          if grep -r "Content-Security-Policy\|X-Frame-Options\|X-Content-Type-Options" next.config.js; then
            echo "‚úÖ Security headers found in Next.js config"
          else
            echo "‚ö†Ô∏è Consider adding security headers to Next.js config"
            echo "Recommended headers: CSP, X-Frame-Options, X-Content-Type-Options, etc."
          fi

  gdpr-compliance:
    name: GDPR Compliance Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for GDPR compliance patterns
        run: |
          echo "üîç Checking for GDPR compliance patterns..."

          # Check for data collection consent
          if grep -r "consent\|cookie.*policy\|privacy.*policy" src/ --include="*.tsx" --include="*.ts"; then
            echo "‚úÖ Privacy/consent patterns found"
          else
            echo "‚ö†Ô∏è Consider implementing privacy consent mechanisms"
          fi

          # Check for data retention policies
          if grep -r "data.*retention\|delete.*user\|right.*forgotten" src/ --include="*.tsx" --include="*.ts"; then
            echo "‚úÖ Data retention patterns found"
          else
            echo "‚ö†Ô∏è Consider implementing data retention and deletion features"
          fi
